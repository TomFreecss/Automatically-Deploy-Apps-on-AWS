name: Auto Deploy on App Changes

on:
  push:
    branches: [main]
    paths:
      - 'app/src/**'  # Only trigger when app code changes
  workflow_dispatch:    # Allow manual trigger

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: demo-app

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to ECR
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Build and push Docker image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd app  
        
        # Build with unique tag
        docker build -t demo-app:$IMAGE_TAG .
        docker tag demo-app:$IMAGE_TAG 831926585199.dkr.ecr.eu-west-1.amazonaws.com/demo-app:$IMAGE_TAG
        
        # Also tag as latest
        docker tag demo-app:$IMAGE_TAG 831926585199.dkr.ecr.eu-west-1.amazonaws.com/demo-app:latest
        
        # Push both tags
        docker push 831926585199.dkr.ecr.eu-west-1.amazonaws.com/demo-app:$IMAGE_TAG
        docker push 831926585199.dkr.ecr.eu-west-1.amazonaws.com/demo-app:latest

- name: Update ECS service with new image
  env:
    IMAGE_TAG: ${{ github.sha }}
  run: |
    # Update task definition to use the new image tag
    TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition demo-app --region eu-west-1 --query 'taskDefinition' --output json | jq 'del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.placementConstraints) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
    
    # Update the image URI in the task definition
    NEW_TASK_DEF=$(echo $TASK_DEFINITION | jq --arg IMAGE "831926585199.dkr.ecr.eu-west-1.amazonaws.com/demo-app:$IMAGE_TAG" '.containerDefinitions[0].image = $IMAGE')
    
    # Register new task definition
    aws ecs register-task-definition --region eu-west-1 --cli-input-json "$NEW_TASK_DEF"
    
    # Update service to use new task definition
    aws ecs update-service --cluster demo-app --service demo-app --task-definition demo-app --region eu-west-1
    
    - name: Force ECS deployment
      run: |
       # Get the service name dynamically
       SERVICE_NAME=$(aws ecs list-services --cluster demo-app --region eu-west-1 --query 'serviceArns[0]' --output text | cut -d'/' -f3)
       echo "Updating service: $SERVICE_NAME"
       aws ecs update-service --cluster demo-app --service $SERVICE_NAME --force-new-deployment --region eu-west-1